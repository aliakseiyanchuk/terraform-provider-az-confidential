#
# Minimal terraform code for your example:
# ----------------------------------------------------------------------------

resource "az-confidential_certificate" "{{ .TFBlockName }}" {
  content = "{{ .EncryptedContent }}"

  # This certificate is enabled for operation. Optionally, there is an option
  # to temporarily disable it.
  enabled = true

  # The certificate version cannot be used before this date
  # Needs to be formatted yyyy-mm-ddTHH:MM:SS'Z'
  # not_before_date = "{{ .NotBeforeExample }}"

  # The certificate version cannot be used after this date
  # Needs to be formatted yyyy-mm-dd'T'HH:MM:SS'Z'
  # not_after_date = "{{ .NotAfterExample }}"

    tags = {
      {{- if .Tags.HasTags }}
      {{- range $key, $value := .Tags.TerraformValueTags }}
      {{ $key }} = {{ $value }}
      {{- end }}
      {{- else }}
      # Fill the tags as desired
      # tagName =  "TagValue"
      {{- end }}
    }

    destination_certificate = {
    {{- if .DestinationCoordinate.VaultName.IsDefined }}
        vault_name = {{ .DestinationCoordinate.VaultName.TerraformExpression }}
    {{- else }}
        # Vault name will be inferred from the key vault where the wrapping key is stored.
        # If this is not what you want, specify the destination vault explicitly
    {{- end }}
        name = {{ .DestinationCoordinate.ObjectName.TerraformExpression }}
    }

    {{- if not .WrappingKeyCoordinate.IsEmpty }}
       wrapping_key = {
       {{- if .WrappingKeyCoordinate.VaultName.IsDefined }}
           vault_name = {{ .WrappingKeyCoordinate.VaultName.TerraformExpression }}
       {{- end }}
       {{- if .WrappingKeyCoordinate.KeyName.IsDefined }}
           name = {{ .WrappingKeyCoordinate.KeyName.TerraformExpression }}
       {{- end }}
       {{- if .WrappingKeyCoordinate.KeyVersion.IsDefined }}
           version = {{ .WrappingKeyCoordinate.KeyVersion.TerraformExpression }}
       {{- end }}
       {{- if .WrappingKeyCoordinate.Algorithm.IsDefined }}
           version = "{{ .WrappingKeyCoordinate.Algorithm.TerraformExpression }}"
       {{- end }}
     }
    {{- end }}
}