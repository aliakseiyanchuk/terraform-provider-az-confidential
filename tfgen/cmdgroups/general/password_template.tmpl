#
# Minimal terraform code for your example:
# ----------------------------------------------------------------------------

data "az-confidential_password" "confidential_password" {
    content = <<-CIPHERTEXT
           {{- range $value := fold80 .EncryptedContent.TerraformExpression }}
           {{ $value }}
           {{- end }}
           CIPHERTEXT

    {{- if .EncryptedContentMetadata.HasProviderConstraints }}
    # The ciphertext constraints the placement with a provider bearing either of these labels:
    {{- range $value := .EncryptedContentMetadata.ProviderConstraints }}
    # - {{ $value }}
    {{- end }}
    {{- else }}
    # The ciphertext does not place any specific constraints on the provider. Any provider will be able
    # to create any object out of this ciphertext, provided it has access to the decrypt the ciphertext.
    # This may be INSUFFICIENTLY secure configuration. Consider adding provider labels to improve your
    # security posture.
    {{- end }}
    {{- if .EncryptedContentMetadata.IsWeaklyProtected }}
    # ---------------------------------------------------------------------------
    # INSECURE ENCRYPTION WARNING! READ CAREFULLY BEFORE PROCEEDING!
    #
    # This ciphertext does NOT embed any secondary controls. This means that any az-confidential
    # provider instance would be able to unwrap it, provided it has access to the wrapping key.
    # Although this might be safe in your specific context, please weight the risk
    # of an accidental or malicious copying of this secret e.g. across environments.
    {{- end }}

    {{- if not .WrappingKeyCoordinate.IsEmpty }}
      wrapping_key = {
        {{- if .WrappingKeyCoordinate.VaultName.IsDefined }}
            vault_name = {{ .WrappingKeyCoordinate.VaultName.TerraformExpression }}
        {{- end }}
        {{- if .WrappingKeyCoordinate.KeyName.IsDefined }}
            name = {{ .WrappingKeyCoordinate.KeyName.TerraformExpression }}
        {{- end }}
        {{- if .WrappingKeyCoordinate.KeyVersion.IsDefined }}
            version = {{ .WrappingKeyCoordinate.KeyVersion.TerraformExpression }}
        {{- end }}
        {{- if .WrappingKeyCoordinate.Algorithm.IsDefined }}
            version = "{{ .WrappingKeyCoordinate.Algorithm.TerraformExpression }}"
        {{- end }}
      }
    {{- end }}
}