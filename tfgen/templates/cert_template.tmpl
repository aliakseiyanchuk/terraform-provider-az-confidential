#
# Minimal terraform code for your example:
# ----------------------------------------------------------------------------

resource "az-confidential_certificate" "{{ .TFBlockName }}" {
  content = "{{ .EncryptedContent }}"

  # This certificate is enabled for operation. Optionally, there is an option
  # to temporarily disable it.
  enabled = true

  # The certificate version cannot be used before this date
  # Needs to be formatted yyyy-mm-ddTHH:MM:SS'Z'
  # not_before_date = "{{ .NotBeforeExample }}"

  # The certificate version cannot be used after this date
  # Needs to be formatted yyyy-mm-dd'T'HH:MM:SS'Z'
  # not_after_date = "{{ .NotAfterExample }}"

    tags = {
      {{- if .HasTags }}
      {{- range $key, $value := .TerraformValueTags }}
      {{ $key }} = {{ $value }}
      {{- end }}
      {{- else }}
      # Fill the tags as desired
      # tagName =  "TagValue"
      {{- end }}
    }

    destination_certificate = {
        {{- if .DestinationCoordinate.DefinesVaultName }}
        vault_name = "{{ .DestinationCoordinate.VaultName}}"
        {{- else }}
        # Vault name will be inferred from the key vault where the wrapping key is stored.
        # If this is not what you want, specify the destination vault explicitly
        {{- end }}
        name = "{{ .DestinationCoordinate.Name }}"
    }

    {{- if .DefinesWrappingCoordinate }}
        wrapping_key = {
          {{- if .WrappingKeyCoordinate.DefiesVaultName }}
              vault_name = {{ .WrappingKeyCoordinate.VaultNameExpr }}
          {{- end }}
          {{- if .WrappingKeyCoordinate.DefiesKeyName }}
              name = {{ .WrappingKeyCoordinate.KeyNameExpr }}
          {{- end }}
          {{- if .WrappingKeyCoordinate.KeyVersion }}
              version = {{ .WrappingKeyCoordinate.KeyVersionExpr }}
          {{- end }}
          {{- if .WrappingKeyCoordinate.Algorithm }}
              version = "{{ .WrappingKeyCoordinate.Algorithm }}"
          {{- end }}
        }
    {{- end }}
}